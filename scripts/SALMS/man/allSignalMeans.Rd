% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/allSignalMeans.R
\name{allSignalMeans}
\alias{allSignalMeans}
\title{Create means of signal functions for all activity types and signals}
\usage{
allSignalMeans(
  allvar,
  stats,
  events,
  first = FALSE,
  dels = 0,
  yranges,
  weighted = FALSE,
  inds,
  weeks = 1:15,
  week0 = 7,
  weekcorrect = 0,
  plotit = FALSE,
  plotCumsum = FALSE,
  devs,
  sepPlots = NULL,
  zeroshift = TRUE,
  FOIinfo,
  legend = TRUE,
  addNum = FALSE,
  iprint = 1,
  drop = TRUE
)
}
\arguments{
\item{allvar}{A list of \code{data.frames} with FOI activity data.
See description below for
more information about the content. The signal names should be used as
identifiers for each  \code{data.frame} in the list.}

\item{stats}{The statistical descriptors}

\item{events}{A vector with the events under \code{dat$EVENT_TYPE} that should be included}

\item{first}{Logical; TRUE if only the first event of the year of each
FOI should be included.}

\item{dels}{The minimum number of days (or a vector of minimum number of days) between two activities for
one of them to be included in the mean.}

\item{yranges}{A list of plotting ranges for the y-axis, one for each statistical descriptor}

\item{weighted}{Logical; TRUE if the mean should be weighted according
to the number of acquisitions used for the weekly mean.}

\item{inds}{Array with names of all indices, same order as used in evres}

\item{weeks}{The number of weeks used for the signal, taken as all values of \code{dat$WEEK} if missing}

\item{week0}{If a signal consists of \code{weeks}, \code{w0} describes the week to compare with}

\item{weekcorrect}{If the week numbers should be shifted, so that 0 will be one or more weeks after week0}

\item{plotit}{Should the function plot anything? Either FALSE, "boxplot", "graph"
or "both"}

\item{plotCumsum}{Should the function also plot means and uncertainty for
the cumulative sums?}

\item{devs}{One or more devices for plotting the results of the function,
or one or more file names that will be opened as pdfs in the function.
The number of devices should reflect the number of groups in sepPlots + 1, multiplied by two if \code{plotit == "both"}. Alternatively the base of one file name can be given, and the necessary
number of pdfs will be opened.  If only one device is given, all the plots will
go to this device. If none is given, all plots will go to the active device}

\item{sepPlots}{List of groups of indexes that should be plotted for
a limited group of descriptors in separate devices (normally pdfs).
It can either be in a
format similar to \code{sepPlots = list(p1 = c("s1_coh6", "s1_coh6_VH"), 
                p2 = c("NDVI", "BSI"))}, which will plot to two extra devices,
two s1-signals to the first and 2 s2-indexes to the second, for the
default descriptor \code{P50}. Otherwise it can be given in the format
sepPlots = list(bands = list(p1 = c("s1_coh6", "s1_coh6_VH"),
p2 = c("NDVI", "BSI"), stats = c("P50", "MEAN"), which
plot to the same extra devices, but will also include the \code{MEAN} values.
The number of groups in \code{sepPlots} should be reflected by
the number of devices \code{devs}}

\item{zeroshift}{Logical; should all activity centred time series be shifted according to the value at week0?}

\item{FOIinfo}{\code{\link{data.frame}} with information about activities and the corresponding FOIs. See details}

\item{legend}{If legend is TRUE or "YES", a legend will be added to each plot.
If legend = "BEFORE"),  there will be a separate page at the start of the
document with all legends instead of a legend on each plot.
The argument is not case sensitive.}

\item{addNum}{Logical; should event number types be added to plots}

\item{iprint}{indicates whether the routine should print some information (0 = nothing, 1 some)}

\item{drop}{Logical; if TRUE and there is only one activity type, the first
dimension (represting activity type) will be dropped from the \code{evres}-variable.
The variable will then be 4-dimensional instead of 5-dimensional.}
}
\value{
A list with two elements, an array with the different results, and a vector with the number
of cases for each combination of activity type and signal. The array (named evres) is
created as a five dimensional array with the following structure:

\verb{evres = array(NA, dim = c(length(events), length(inds), }
\verb{            length(stats), 20, length(weeks)))}

The length of the fourth dimensions is 20, although there are only values in the first 4 items after
\code{allSignalMeans}.
The rest will be computed and used in the function \code{\link{signalProbability}}.
If \code{isTRUE(drop)} and there is only one activity type, the first dimension will be dropped.
The values in these first four items are
\itemize{
\item{1: The difference in signal value between \code{week0} and the week in question}
\item{2: The cumulative difference in signal value between \code{week0} and the week in question}
\item{3: The standard deviation of the difference in signal value between \code{week0} and the week in question}
\item{4: The standard deviation of the cumulative difference in signal value between \code{week0} and the week in question}
}

The second element of the return value (referred to as cases) is a matrix with dimensions:

\code{cases = matrix(NA,  nrow = length(events), ncol = length(inds))}

This is used for adding the number of cases to the header of some of the plots
}
\description{
The function computes mean and standard deviation for a particular
activity type, for the descriptors included in the stats variable.
}
\details{
The function produces plots for all signals and descriptors for different activity
types. It will also return an array (typically referred to as \code{evres}) that can be used
by further functions in this package.

#' @details evres is a 5-dimensional array, with information about the mean changes
and probabilities of the change
being above a threshold. It can both be an input argument and the result of different functions in the
SALMS-package. If there is only one activity type, the first dimension can be dropped.
The dimensions are \code{c(events, inds, stats, evres-var , weeks)}. The content of the
array is defined by the different values of \code{evres-var}. These can be:
\enumerate{
\item{1 \code{mean(x)}}
\item{2 \code{cumsum(x)}}
\item{3 \code{std(x)}}
\item{4 \code{std(cumsum(x))}}
\item{5 \code{mean(x)*sign(mean(xx))} where \code{xx} is the signal change for the weeks \code{selwks}  (Making sure the average change after an activity is positive)}
\item{6 \code{cumsum(x)*sign(mean(xx))} where \code{xx} is the signal change for the weeks \code{selwks}  (Making sure the average change after an activity is positive)}
\item{7 \code{p0} - The probability of the change being larger than 0}
\item{8 \code{p01} - The probability of the change being later than a threshold}
\item{9 \code{p0c} - The probability of the cumulative change being larger than 0}
\item{10 \code{p01c} - The probability of the cumulative change being larger than a threshold}
\item{11 \code{max(po)} - The highest p0 of interesting weeks}
\item{12 \code{max(p01)} - The highest p01 of interesting weeks}
\item{13 The value of the change relative to highest}
\item{14 The value of the change relative to lowest}
\item{15 The value \code{p0} relative to the highest}
\item{16 The value \code{p0} relative to the lowest}
}
}
\examples{
ddir = system.file("extdata", package = "SALMS")
odir = paste0(ddir, "/signals")

hdir = tempdir()
# Read all signals and find the names of all signals/indicators
allvar = readSignals(odir)
inds = names(allvar)

# Open two pdfs for plotting the results from the mean function 
devs = list()
for (ipdf in 1:2) {pdf(paste0(hdir, "/meanPlot", ipdf, ".pdf")) ; devs[ipdf] = dev.cur()}

# Store all the results from the calculations in evress, which contains an 
# array with the means and standard deviations
evress = allSignalMeans(allvar, events = 1, first = FALSE, 
                        dels = 0, weighted = FALSE, inds = inds, weeks = 1:15, week0 = 7, 
                        weekcorrect = 0, plotit = "both", 
                        dev = devs, zeroshift = TRUE, legend = "before",
                        addNum = FALSE, iprint = 1)
evres = evress$evres
cases = evress$cases
for (ipdf in 1:2) dev.off(devs[ipdf])

}
\references{
{
\insertRef{Zielinski2022}{SALMS}
}
}
